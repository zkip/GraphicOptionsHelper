frag {
	div {
		@for ... {
			@if ...
		}
	}
}

frag {
	div {
		@for ... {
			@for ... {
				@if ...
			}
		}
	}
}

frag {
	div {
		@for ... {
			@for ... {
				@if ...
			}
		}
	}
}

frag {
	items []string
	
	div {
		@for let i = 0; i < 10; i++ {
			@for items as item, j {
				@for let x = i * j; {
					@if x > 2 {
						@ x += 1
					} else {
						@ x = x + 3
					}

					@if x > 30 {
						span {
							div "JJJ"
							label item
						}
						@break
					}
				}
			}
		}
	}
}

// conditions
frag {
	div {
		@if ok {
			span
			div
			ul {
				li
				li
			}
		} else {

		}
	}
}

// 
frag {
	div {
		@for i = 0; i < rand( 0 10 ); i++ {
			span toString( i )
		}
	}
	div {
		@for i = 0; i < 10; i += rand( 0 10) {
			span toString( i )
		}
	}
	div {
		@for i = 0; i < 10; i += rand( 0, 10 - i ) {
			span toString( i )
			@for j = 0; j < 10; j ++ {
				if j > i {
					i -= rand( 0, i )
				} else {	
					p `${i}, ${i}`
				}
			}
		}
	}
}

//
frag {
	div {
		@ let j = 0
		@for i = 0; i < 10; i++ {
			@if i < 3 {
				@ j++
			} esle {
				@ j += rand( 0, j )
			}
		}
	}
}

//
frag {
	div {
		@ let j = 0
		@for i = 0; i < 10; i++ {
			@if i < rand( 0, 10 ) {
				div toString(( j += rand( 0, j ), j ))
			}
		}
	}
}

type Demo2 {
	count uint 3

	frag {
		div {
			span toString(count)
			ul #container .container {
				@for let i = 0; i < count; i++ {
					li toString(i) {
						@for let j = 0; j < i; j += rand( 1, i ) {
							span `${i},${j}` {
								span `${i},${j}`
							}
						}
					}
				}
			}
		}
	}
}